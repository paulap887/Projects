// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuitAlteration.Infrastructure;

#nullable disable

namespace SuitAlteration.Infrastructure.Migrations
{
    [DbContext(typeof(SuitApplicationDbContext))]
    partial class SuitApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SuitAlteration.Domain.Entities.Alteration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("SalesAssociateId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Alterations", (string)null);
                });

            modelBuilder.Entity("SuitAlteration.Domain.Entities.AlterationPieceTypeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("AdjustmentInCms")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AlterationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SuitPieceType")
                        .HasColumnType("int");

                    b.Property<int>("SuitPieceTypeSide")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlterationId");

                    b.ToTable("AlterationPieceTypeDetails", (string)null);
                });

            modelBuilder.Entity("SuitAlteration.Domain.Entities.AlterationPieceTypeDetail", b =>
                {
                    b.HasOne("SuitAlteration.Domain.Entities.Alteration", "Alteration")
                        .WithMany("PieceTypeDetails")
                        .HasForeignKey("AlterationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alteration");
                });

            modelBuilder.Entity("SuitAlteration.Domain.Entities.Alteration", b =>
                {
                    b.Navigation("PieceTypeDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
